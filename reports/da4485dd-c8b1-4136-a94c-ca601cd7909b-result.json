{"name": "test_fill_contact_us_form[Dathan-Test company2-dath@example.com-1234567890-Interested in your services]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=140.0.7339.128)\nStacktrace:\n\tGetHandleVerifier [0x0x4bc333+65459]\n\tGetHandleVerifier [0x0x4bc374+65524]\n\t(No symbol) [0x0x2dd973]\n\t(No symbol) [0x0x2bc19d]\n\t(No symbol) [0x0x35059e]\n\t(No symbol) [0x0x36aef9]\n\t(No symbol) [0x0x349bf6]\n\t(No symbol) [0x0x31b38e]\n\t(No symbol) [0x0x31c274]\n\tGetHandleVerifier [0x0x73eda3+2697763]\n\tGetHandleVerifier [0x0x739ec7+2677575]\n\tGetHandleVerifier [0x0x4e4194+228884]\n\tGetHandleVerifier [0x0x4d49f8+165496]\n\tGetHandleVerifier [0x0x4db18d+192013]\n\tGetHandleVerifier [0x0x4c47d8+99416]\n\tGetHandleVerifier [0x0x4c4972+99826]\n\tGetHandleVerifier [0x0x4aebea+10346]\n\tBaseThreadInitThunk [0x0x75317ba9+25]\n\tRtlInitializeExceptionChain [0x0x770ac0cb+107]\n\tRtlClearBits [0x0x770ac04f+191]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e1da5ae4d48cd7e5a662add94c852fcc\")>, name = 'Dathan', company = 'Test company2'\nemail = 'dath@example.com', phone = 1234567890, message = 'Interested in your services'\n\n    @pytest.mark.parametrize(\"name, company, email, phone, message\", test_data)\n    def test_fill_contact_us_form(browser, name, company, email, phone, message):\n        with allure.step(\"Open the website\"):\n            browser.get(Config.BASE_URL)\n    \n        contact_page = ContactUsPage(browser)\n    \n        with allure.step(\"Navigate to Contact Us page\"):\n>           contact_page.go_to_contact_us()\n\ntests\\test_fillingform_and_screenshort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\contact_us_page.py:22: in go_to_contact_us\n    self.wait.until(EC.element_to_be_clickable(self.CONTACT_US_BUTTON)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:624: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:926: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000143AF885F90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...hunk [0x0x75317ba9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x0x770ac0cb+107]\\\\n\\\\tRtlClearBits [0x0x770ac04f+191]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=140.0.7339.128)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x4bc333+65459]\nE       \tGetHandleVerifier [0x0x4bc374+65524]\nE       \t(No symbol) [0x0x2dd973]\nE       \t(No symbol) [0x0x2bc19d]\nE       \t(No symbol) [0x0x35059e]\nE       \t(No symbol) [0x0x36aef9]\nE       \t(No symbol) [0x0x349bf6]\nE       \t(No symbol) [0x0x31b38e]\nE       \t(No symbol) [0x0x31c274]\nE       \tGetHandleVerifier [0x0x73eda3+2697763]\nE       \tGetHandleVerifier [0x0x739ec7+2677575]\nE       \tGetHandleVerifier [0x0x4e4194+228884]\nE       \tGetHandleVerifier [0x0x4d49f8+165496]\nE       \tGetHandleVerifier [0x0x4db18d+192013]\nE       \tGetHandleVerifier [0x0x4c47d8+99416]\nE       \tGetHandleVerifier [0x0x4c4972+99826]\nE       \tGetHandleVerifier [0x0x4aebea+10346]\nE       \tBaseThreadInitThunk [0x0x75317ba9+25]\nE       \tRtlInitializeExceptionChain [0x0x770ac0cb+107]\nE       \tRtlClearBits [0x0x770ac04f+191]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "steps": [{"name": "Open the website", "status": "passed", "start": 1759392147429, "stop": 1759392148775}, {"name": "Navigate to Contact Us page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=140.0.7339.128)\nStacktrace:\n\tGetHandleVerifier [0x0x4bc333+65459]\n\tGetHandleVerifier [0x0x4bc374+65524]\n\t(No symbol) [0x0x2dd973]\n\t(No symbol) [0x0x2bc19d]\n\t(No symbol) [0x0x35059e]\n\t(No symbol) [0x0x36aef9]\n\t(No symbol) [0x0x349bf6]\n\t(No symbol) [0x0x31b38e]\n\t(No symbol) [0x0x31c274]\n\tGetHandleVerifier [0x0x73eda3+2697763]\n\tGetHandleVerifier [0x0x739ec7+2677575]\n\tGetHandleVerifier [0x0x4e4194+228884]\n\tGetHandleVerifier [0x0x4d49f8+165496]\n\tGetHandleVerifier [0x0x4db18d+192013]\n\tGetHandleVerifier [0x0x4c47d8+99416]\n\tGetHandleVerifier [0x0x4c4972+99826]\n\tGetHandleVerifier [0x0x4aebea+10346]\n\tBaseThreadInitThunk [0x0x75317ba9+25]\n\tRtlInitializeExceptionChain [0x0x770ac0cb+107]\n\tRtlClearBits [0x0x770ac04f+191]\n\n", "trace": "  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\tests\\test_fillingform_and_screenshort.py\", line 34, in test_fill_contact_us_form\n    contact_page.go_to_contact_us()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\pages\\contact_us_page.py\", line 22, in go_to_contact_us\n    self.wait.until(EC.element_to_be_clickable(self.CONTACT_US_BUTTON)).click()\n    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 129, in until\n    value = method(self._driver)\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 624, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 926, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 458, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Click on Contact Us button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=140.0.7339.128)\nStacktrace:\n\tGetHandleVerifier [0x0x4bc333+65459]\n\tGetHandleVerifier [0x0x4bc374+65524]\n\t(No symbol) [0x0x2dd973]\n\t(No symbol) [0x0x2bc19d]\n\t(No symbol) [0x0x35059e]\n\t(No symbol) [0x0x36aef9]\n\t(No symbol) [0x0x349bf6]\n\t(No symbol) [0x0x31b38e]\n\t(No symbol) [0x0x31c274]\n\tGetHandleVerifier [0x0x73eda3+2697763]\n\tGetHandleVerifier [0x0x739ec7+2677575]\n\tGetHandleVerifier [0x0x4e4194+228884]\n\tGetHandleVerifier [0x0x4d49f8+165496]\n\tGetHandleVerifier [0x0x4db18d+192013]\n\tGetHandleVerifier [0x0x4c47d8+99416]\n\tGetHandleVerifier [0x0x4c4972+99826]\n\tGetHandleVerifier [0x0x4aebea+10346]\n\tBaseThreadInitThunk [0x0x75317ba9+25]\n\tRtlInitializeExceptionChain [0x0x770ac0cb+107]\n\tRtlClearBits [0x0x770ac04f+191]\n\n", "trace": "  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\pages\\contact_us_page.py\", line 22, in go_to_contact_us\n    self.wait.until(EC.element_to_be_clickable(self.CONTACT_US_BUTTON)).click()\n    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 129, in until\n    value = method(self._driver)\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 624, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 926, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 458, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\aksha\\PycharmProjects\\Automationtask\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1759392148776, "stop": 1759392148778}], "start": 1759392148775, "stop": 1759392148781}], "parameters": [{"name": "name", "value": "'Dathan'"}, {"name": "company", "value": "'Test company2'"}, {"name": "email", "value": "'dath@example.com'"}, {"name": "phone", "value": "1234567890"}, {"name": "message", "value": "'Interested in your services'"}], "start": 1759392147429, "stop": 1759392148791, "uuid": "b0db358f-c061-471a-ba50-d41a2047f515", "historyId": "e5aa6fa0a5c0c993a95b97e94779c5ee", "testCaseId": "c0c7a555c3a68394285629002386b4c6", "fullName": "tests.test_fillingform_and_screenshort#test_fill_contact_us_form", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_fillingform_and_screenshort"}, {"name": "host", "value": "DESKTOP-NEVPLM0"}, {"name": "thread", "value": "12352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_fillingform_and_screenshort"}], "titlePath": ["tests", "test_fillingform_and_screenshort.py"]}